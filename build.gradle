plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.jodexindustries'
version = '0.0.1'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "mrwouter-repo"
        url = "https://repo.mrwouter.nl"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
    compileOnly "org.projectlombok:lombok:1.18.20"
    compileOnly "me.clip:placeholderapi:2.11.2"
    compileOnly "com.googlecode.json-simple:json-simple:1.1.1"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    mergeServiceFiles()
}
tasks {
    assemble {
        dependsOn(shadowJar)
    }
}
jar{
    dependsOn ('dependencies')
}